/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Model.Doctor;
import Helper.*;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author furka
 */
public class DoctorGUI extends javax.swing.JFrame {

    private DefaultTableModel w_hourModel;
    private Object[] w_hourData;
    private Doctor doctor;

    /**
     * Creates new form DoctorGUI1
     */
    public DoctorGUI(Doctor doctor) throws SQLException {
        initComponents();

        this.doctor = doctor;
        jLabel1.setText("Wellcome, dear " + doctor.getName());
        w_hourModel = new DefaultTableModel();
        table_Whours.setModel(w_hourModel);
        w_hourModel.setColumnIdentifiers(new Object[]{"ID", "Date"});
        w_hourData = new Object[2];
        for (int i = 0; i < doctor.getWhourList(doctor.getId()).size(); i++) {
            w_hourData[0] = doctor.getWhourList(doctor.getId()).get(i).getId();
            w_hourData[1] = doctor.getWhourList(doctor.getId()).get(i).getW_date();
            w_hourModel.addRow(w_hourData);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        kGradientPanel1 = new keeptoo.KGradientPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        kGradientPanel2 = new keeptoo.KGradientPanel();
        select_date = new com.toedter.calendar.JDateChooser();
        select_time = new javax.swing.JComboBox<>();
        btn_addHours = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_Whours = new javax.swing.JTable();
        btn_deleteWhour = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        kGradientPanel1.setkEndColor(new java.awt.Color(0, 204, 204));
        kGradientPanel1.setkStartColor(new java.awt.Color(204, 0, 204));
        kGradientPanel1.setPreferredSize(new java.awt.Dimension(731, 550));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Wellcome, dear doctor");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("EXIT");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(204, 0, 204));
        jTabbedPane1.setForeground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(719, 453));
        jTabbedPane1.setRequestFocusEnabled(false);

        kGradientPanel2.setkEndColor(new java.awt.Color(0, 204, 204));
        kGradientPanel2.setkStartColor(new java.awt.Color(204, 0, 204));

        select_date.setBackground(new java.awt.Color(255, 204, 255));

        select_time.setBackground(new java.awt.Color(204, 153, 255));
        select_time.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10:00", "10:30", "11:00", "11:30", "12:30", "13:00", "13:30", "14:00", "14:30", "15:00", "15:30", "16:00" }));

        btn_addHours.setBackground(new java.awt.Color(153, 102, 255));
        btn_addHours.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btn_addHours.setForeground(new java.awt.Color(255, 255, 255));
        btn_addHours.setText("add");
        btn_addHours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addHoursActionPerformed(evt);
            }
        });

        table_Whours.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(table_Whours);

        btn_deleteWhour.setText("Delete");
        btn_deleteWhour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteWhourActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout kGradientPanel2Layout = new javax.swing.GroupLayout(kGradientPanel2);
        kGradientPanel2.setLayout(kGradientPanel2Layout);
        kGradientPanel2Layout.setHorizontalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(select_date, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(select_time, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_addHours, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_deleteWhour, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 719, Short.MAX_VALUE)
        );
        kGradientPanel2Layout.setVerticalGroup(
            kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(select_time)
                    .addComponent(select_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(kGradientPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_addHours, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_deleteWhour, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Working Hours", kGradientPanel2);
        kGradientPanel2.getAccessibleContext().setAccessibleName("working hours");

        javax.swing.GroupLayout kGradientPanel1Layout = new javax.swing.GroupLayout(kGradientPanel1);
        kGradientPanel1.setLayout(kGradientPanel1Layout);
        kGradientPanel1Layout.setHorizontalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, kGradientPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2))
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        kGradientPanel1Layout.setVerticalGroup(
            kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(kGradientPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(kGradientPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(kGradientPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 433, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(kGradientPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        LoginGUI login = new  LoginGUI();
        this.dispose();
        login.setVisible(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void btn_addHoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addHoursActionPerformed

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date = sdf.format(select_date.getDate());

        if (date.isEmpty()) {
            Helper.showMsg("Please enter a valid date!");
        } else {
            String time = " " + select_time.getSelectedItem().toString() + ":00";
            String selectDate = date + time;

            if (doctor == null || doctor.getName() == null) {
                Helper.showMsg("Doctor or doctor name is null!");
            } else {
                boolean ctrl = doctor.addW_hour(doctor.getId(), doctor.getName(), selectDate);
                if (ctrl) {
                    Helper.showMsg("success");
                    try {
                        updateWhourModel(doctor);
                    } catch (SQLException ex) {
                        ex.printStackTrace();
                    }
                } else {
                    Helper.showMsg("Insert error");
                }
            }
        }
    }//GEN-LAST:event_btn_addHoursActionPerformed

    private void btn_deleteWhourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteWhourActionPerformed
        
        int selRow = table_Whours.getSelectedRow();
        if (selRow >= 0) {
            String selectRow = table_Whours.getModel().getValueAt(selRow, 0).toString();
            int selId = Integer.parseInt(selectRow);
            boolean ctrl;
            try {
                ctrl = doctor.deleteWhour(selId);
                if (ctrl) {
                    Helper.showMsg("success");
                    updateWhourModel(doctor);
                } else {
                    Helper.showMsg("error");

                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }

        } else {
            Helper.showMsg("Please, select the row you want to delete!");
        }

    }//GEN-LAST:event_btn_deleteWhourActionPerformed

    /**
     * @param args the command line arguments
     */
    public void updateWhourModel(Doctor doctor) throws SQLException {
        DefaultTableModel clearModel = (DefaultTableModel) table_Whours.getModel();
        clearModel.setRowCount(0);
        for (int i = 0; i < doctor.getWhourList(doctor.getId()).size(); i++) {
            w_hourData[0] = doctor.getWhourList(doctor.getId()).get(i).getId();
            w_hourData[1] = doctor.getWhourList(doctor.getId()).get(i).getW_date();
            w_hourModel.addRow(w_hourData);
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addHours;
    private javax.swing.JButton btn_deleteWhour;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private keeptoo.KGradientPanel kGradientPanel1;
    private keeptoo.KGradientPanel kGradientPanel2;
    private com.toedter.calendar.JDateChooser select_date;
    private javax.swing.JComboBox<String> select_time;
    private javax.swing.JTable table_Whours;
    // End of variables declaration//GEN-END:variables
}
